{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","prototypes","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6NAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAElBO,QAAQC,IAAI,iBAIZ,SAEI,uBACIC,KAAK,OACLC,MAASX,EACTY,SAnBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,aAyB/Bd,EAAYiB,WAAa,CACrBhB,c,OAAgBiB,EAAUC,KAAKC,Y,aChCtBC,EAAc,SAAC,GAAoB,EAAnBC,GAAoB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAEnC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,0BCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGCA,EAAKC,OAHN,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHhB,GAAGgB,EAAIhB,GACPC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARvB,kBAYZY,GAZY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAY,IAAD,EACT3B,mBAAS,CAC/BiC,KAAM,GACNO,SAAS,IAHsB,mBAC5BC,EAD4B,KACrBC,EADqB,KAWnC,OALAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAM,SAAAC,GAAI,OAAGH,EAAS,CAACT,KAAMY,EAAKL,SAAS,SAClD,CAACb,IAEIc,EDR0BK,CAAanB,GAAjCU,EADsB,EAC3BJ,KAAcO,EADa,EACbA,QAClB,OACD,qCACI,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OAAM,cAAC,EAAD,eAEZA,GADEA,EAAIhB,aEenB2B,EAzBM,WAAM,MAEa/C,mBAAS,CAAC,cAFvB,mBAEhBgD,EAFgB,KAEJjD,EAFI,KAQvB,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQiD,EAAWb,KAAI,SAAAR,GAAQ,OAAK,cAAC,EAAD,CAExBA,SAAUA,GADHA,Y,OCd/BsB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c9d50672.chunk.js","sourcesContent":["import userEvent from '@testing-library/user-event'\r\n\r\nimport React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n        // console.log(e.target.value)\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        console.log('SUBMIT HECHO');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* <h1>{inputValue}</h1> */}\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange= { handleInputChange}\r\n            />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title,url}) => {\r\n    // console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n            {/* { img.title} */}\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=C7bXHXv3RUmfqFmqVfaes3Qk1VfXH77X`;\r\n    const resp = await fetch(url); \r\n    const {data}= await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }); \r\n    // console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from '../helpers/getGifs';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const { data:images , loading} = useFetchGifs(category);  \r\n        return (\r\n       <>\r\n           <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n           {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n           \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => ( <GifGridItem \r\n                        key ={img.id}\r\n                        {...img} />\r\n                    ))\r\n                } \r\n            </div>\r\n       </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs =(category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then( imgs =>setState({data: imgs,loading: false}));\r\n    },[category])\r\n    \r\n    return state; //{data: [],loading:true}\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['ONE PUCH','SAMURAI X','DRAGON BALL'];\r\n    const [categories, setCategories] = useState(['one punch']);\r\n    \r\n    // const handleAdd =()=>{\r\n    //     setcategories([...categories,'Agregado recientemente']);\r\n    // }\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories= {setCategories} />\r\n            <hr/>   \r\n            <ol>\r\n                {\r\n                    categories.map(category => (<GifGrid \r\n                        key = {category}\r\n                        category={category} />))\r\n                }\r\n            </ol>\r\n            {/* {categories}        */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}